//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain Version 0.8.0
// The SmartSoft Toolchain has been developed by:
//  
// ZAFH Servicerobotic Ulm
// Christian Schlegel (schlegel@hs-ulm.de)
// University of Applied Sciences
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// smart-robotics.sourceforge.net
// 
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#ifndef _SAMPLESENDSERVER_HH
#define _SAMPLESENDSERVER_HH

#include <iostream>
#include "smartSoft.hh"
#include "../SampleSendServerCore.hh"
// include communication objects
#include <CommSampleObjects/commSamplePrint.hh>

// include tasks	

// include handler
#include "../CompHandler.hh"
#include "../PrintHandler.hh"

#define COMP SampleSendServer::instance()

class SampleSendServer: public SampleSendServerCore
{
private:
	static SampleSendServer _sampleSendServer;

	// constructor
	SampleSendServer();

	// copy-constructor
	SampleSendServer(const SampleSendServer& cc);

	// destructor
	~SampleSendServer()
	{
	}
	;

	// load parameter from ini file
	void loadParameter(int argc, char *argv[]);

	// instantiate handler
	CompHandler compHandler;
	PrintHandler printHandler;

	// ThreadQueueHandler 


public:
	// component
	CHS::SmartComponent *component;

	// create mutex


	// create condition mutex


	// instantiate tasks


	// ports
	CHS::SendServer<CommSampleObjects::CommSamplePrint> *printServer;

	void init(int argc, char *argv[]);
	void run();

	// return singleton instance
	static SampleSendServer* instance()
	{
		return (SampleSendServer*) &_sampleSendServer;
	}

	// ini parameter
	struct ini_ini
	{

		struct ini_printServer
		{
			std::string serviceName;
		} printServer;

	} ini;

};
#endif
