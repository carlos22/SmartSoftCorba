//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain Version 0.8.0
// The SmartSoft Toolchain has been developed by:
//  
// ZAFH Servicerobotic Ulm
// Christian Schlegel (schlegel@hs-ulm.de)
// University of Applied Sciences
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// smart-robotics.sourceforge.net
// 
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------

#include "CompHandler.hh"
#include "gen/SamplePushNewestClient.hh"

#include <iostream>

// include communication objects
#include <CommSampleObjects/commSampleTime.hh>

void CompHandler::onStartup()
{
	std::cout
			<< "startup - put your startupCode in CompHandler::onStartup()!!!\n";

	CHS::StatusCode status;

	// connect to all services
	std::cout << "connecting to: " << COMP->ini.timeClient.serverName << "; "
			<< COMP->ini.timeClient.serviceName << std::endl;
	status = COMP->timeClient->connect(COMP->ini.timeClient.serverName,
			COMP->ini.timeClient.serviceName);
	while (status != CHS::SMART_OK)
	{
		usleep(500000);
		status = COMP->timeClient->connect(COMP->ini.timeClient.serverName,
				COMP->ini.timeClient.serviceName);
	}
	std::cout << "connected.\n";

	COMP->timeClient->subscribe();

	// run all tasks
	COMP->timeTask.open();

}
