//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain Version 0.8.0
// The SmartSoft Toolchain has been developed by:
//
// ZAFH Servicerobotic Ulm
// Christian Schlegel (schlegel@hs-ulm.de)
// University of Applied Sciences
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// smart-robotics.sourceforge.net
//
// This file is generated once. Modify this file to your needs.
// If you want the toolchain to re-generate this file, please
// delete it before running the code generator.
//--------------------------------------------------------------------------

#include "CalcTaskA.hh"
#include "gen/SampleQueryClient.hh"

#include <iostream>

CalcTaskA::CalcTaskA()
{
	std::cout << "constructor CalcTaskA\n";
}

int CalcTaskA::svc()
{
	// do something -- put your code here !!!
	COMP->calcPort->connect( COMP->ini.calcPort.serverName, COMP->ini.calcPort.serviceName);

	int i=0;
	std::list<int> list;

	CommSampleObjects::CommSampleValues request;
	CommSampleObjects::CommSampleResult result;

	CHS::StatusCode status;

	while (1)
	{
		// query
		list.clear();
		list.push_back(1);
		list.push_back(2);
		list.push_back(3);

		request.set(list);

		std::cout << "query " << i++ << std::endl;

		//status = SampleQueryClient::instance()->calcPort->query(request, result);
		status = COMP->calcPort->query(request, result);

		std::cout << "query (status): " << CHS::StatusCodeConversion(status) << " result ";
		result.print();

		usleep( COMP->ini.general.queryDelayMs * 1000 );
	}
	return 0;
}
