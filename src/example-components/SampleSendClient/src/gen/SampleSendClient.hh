//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain Version 0.8.0
// The SmartSoft Toolchain has been developed by:
//  
// ZAFH Servicerobotic Ulm
// Christian Schlegel (schlegel@hs-ulm.de)
// University of Applied Sciences
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// smart-robotics.sourceforge.net
// 
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#ifndef _SAMPLESENDCLIENT_HH
#define _SAMPLESENDCLIENT_HH

#include <iostream>
#include "smartSoft.hh"
#include "../SampleSendClientCore.hh"
// include communication objects
#include <CommSampleObjects/commSamplePrint.hh>

// include tasks	

#include "../PrintTask.hh"
// include handler
#include "../CompHandler.hh"

#define COMP SampleSendClient::instance()

class SampleSendClient: public SampleSendClientCore
{
private:
	static SampleSendClient _sampleSendClient;

	// constructor
	SampleSendClient();

	// copy-constructor
	SampleSendClient(const SampleSendClient& cc);

	// destructor
	~SampleSendClient()
	{
	}
	;

	// load parameter from ini file
	void loadParameter(int argc, char *argv[]);

	// instantiate handler
	CompHandler compHandler;

	// ThreadQueueHandler 

public:
	// component
	CHS::SmartComponent *component;

	// create mutex


	// create condition mutex


	// instantiate tasks

	PrintTask printTask;

	// ports
	CHS::SendClient<CommSampleObjects::CommSamplePrint> *printClient;

	void init(int argc, char *argv[]);
	void run();

	// return singleton instance
	static SampleSendClient* instance()
	{
		return (SampleSendClient*) &_sampleSendClient;
	}

	// ini parameter
	struct ini_ini
	{

		struct ini_printClient
		{
			std::string serverName;
			std::string serviceName;
		} printClient;

	} ini;

};
#endif
