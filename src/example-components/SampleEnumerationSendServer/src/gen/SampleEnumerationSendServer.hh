//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain Version 0.8.0
// The SmartSoft Toolchain has been developed by:
//  
// ZAFH Servicerobotic Ulm
// Christian Schlegel (schlegel@hs-ulm.de)
// University of Applied Sciences
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// smart-robotics.sourceforge.net
// 
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#ifndef _SAMPLEENUMERATIONSENDSERVER_HH
#define _SAMPLEENUMERATIONSENDSERVER_HH

#include <iostream>
#include "smartSoft.hh"
#include "../SampleEnumerationSendServerCore.hh"
// include communication objects
#include <CommSampleObjects/commSampleEnumeration.hh>

// include tasks	

// include handler
#include "../CompHandler.hh"
#include "../EnumSendHandler.hh"

#define COMP SampleEnumerationSendServer::instance()

class SampleEnumerationSendServer: public SampleEnumerationSendServerCore
{
private:
	static SampleEnumerationSendServer _sampleEnumerationSendServer;

	// constructor
	SampleEnumerationSendServer();

	// copy-constructor
	SampleEnumerationSendServer(const SampleEnumerationSendServer& cc);

	// destructor
	~SampleEnumerationSendServer()
	{
	}
	;

	// load parameter from ini file
	void loadParameter(int argc, char *argv[]);

	// instantiate handler
	CompHandler compHandler;
	EnumSendHandler enumSendHandler;

	// ThreadQueueHandler 


public:
	// component
	CHS::SmartComponent *component;

	// create mutex


	// create condition mutex


	// instantiate tasks


	// ports
	CHS::SendServer<CommSampleObjects::CommSampleEnumeration> *enumSendServer;

	void init(int argc, char *argv[]);
	void run();

	// return singleton instance
	static SampleEnumerationSendServer* instance()
	{
		return (SampleEnumerationSendServer*) &_sampleEnumerationSendServer;
	}

	// ini parameter
	struct ini_ini
	{

		struct ini_enumSendServer
		{
			std::string serviceName;
		} enumSendServer;

	} ini;

};
#endif
