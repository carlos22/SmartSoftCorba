//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain Version 0.8.0
// The SmartSoft Toolchain has been developed by:
//
// ZAFH Servicerobotic Ulm
// Christian Schlegel (schlegel@hs-ulm.de)
// University of Applied Sciences
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// smart-robotics.sourceforge.net
//
// This file is generated once. Modify this file to your needs.
// If you want the toolchain to re-generate this file, please
// delete it before running the code generator.
//--------------------------------------------------------------------------

#include "MyTask.hh"
#include "gen/SampleStateClient.hh"

#include <iostream>

MyTask::MyTask()
{
	std::cout << "constructor MyTask\n";
}

int MyTask::svc()
{
	// do something -- put your code here !!!
	while (1)
	{
		CHS::StatusCode status;
		std::list<std::string> mainstates;

		// first get list of main states
		status = COMP->stateClient->getWaitMainStates(mainstates);
		if(status != CHS::SMART_OK)
		{
			std::cout << "could not connect to stateServer\n";
		}
		else
		{
			// print list of main states
			unsigned int itemNumber = 1;

			std::cout << "\nlist of possible main states: " << std::endl;
			for (std::list<std::string>::iterator iterator1=mainstates.begin();iterator1 != mainstates.end(); ++iterator1)
			{
				std::cout << setw(2) << itemNumber << " -- mainstate :  " << *iterator1 << std::endl;
				itemNumber++;
			}
			std::cout << setw(2) << itemNumber << " -- return to main menu" << std::endl;

			// ask which state should be sent
			std::cout << "\nplease choose number:  ";
			cin >> itemNumber;

			// check input
			if( itemNumber <= mainstates.size() )
			{
				// iterate to selected state
				std::list<std::string>::iterator iterator1 = mainstates.begin();
				for(unsigned int i=1; i < itemNumber; i++)
				{
					++iterator1;
				}
				// send selected state
				COMP->stateClient->setWaitState( *iterator1 );
				std::cout << "state <" << *iterator1 << "> sent\n";
			}
		} // else
	}
	return 0;
}
