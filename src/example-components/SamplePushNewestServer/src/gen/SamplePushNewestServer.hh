//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain Version 0.8.0
// The SmartSoft Toolchain has been developed by:
//  
// ZAFH Servicerobotic Ulm
// Christian Schlegel (schlegel@hs-ulm.de)
// University of Applied Sciences
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// smart-robotics.sourceforge.net
// 
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#ifndef _SAMPLEPUSHNEWESTSERVER_HH
#define _SAMPLEPUSHNEWESTSERVER_HH

#include <iostream>
#include "smartSoft.hh"
#include "../SamplePushNewestServerCore.hh"
// include communication objects
#include <CommSampleObjects/commSampleTime.hh>

// include tasks	

#include "../TimeTask.hh"
// include handler
#include "../CompHandler.hh"

#define COMP SamplePushNewestServer::instance()

class SamplePushNewestServer: public SamplePushNewestServerCore
{
private:
	static SamplePushNewestServer _samplePushNewestServer;

	// constructor
	SamplePushNewestServer();

	// copy-constructor
	SamplePushNewestServer(const SamplePushNewestServer& cc);

	// destructor
	~SamplePushNewestServer()
	{
	}
	;

	// load parameter from ini file
	void loadParameter(int argc, char *argv[]);

	// instantiate handler
	CompHandler compHandler;

	// ThreadQueueHandler 

public:
	// component
	CHS::SmartComponent *component;

	// create mutex


	// create condition mutex


	// instantiate tasks

	TimeTask timeTask;

	// ports
	CHS::PushNewestServer<CommSampleObjects::CommSampleTime> *timeServer;

	void init(int argc, char *argv[]);
	void run();

	// return singleton instance
	static SamplePushNewestServer* instance()
	{
		return (SamplePushNewestServer*) &_samplePushNewestServer;
	}

	// ini parameter
	struct ini_ini
	{

		struct ini_timeServer
		{
			std::string serviceName;
		} timeServer;

	} ini;

};
#endif
