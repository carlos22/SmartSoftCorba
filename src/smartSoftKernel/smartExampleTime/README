FILE STRUCTURE
==============


Example of standard communication object:

    commExampleTime.cc  : Implementation of communication object for transmitting time
    commExampleTime.hh  : Headerfile of communication object for transmitting time
    exampleTime.idl     : IDL description of the data structure which transmits time
                          within the above communication object


WHAT IS INSIDE THE COMMUNICATION OBJECTS ?
==========================================

Communication objects wrap the data to be transmitted by the communication
patterns. For the user it looks like the communication patterns transmit
instances of communication objects. At the implementational level, only
the data structure inside a communication object is transmitted. These
data structures are described by IDL. Therefore the content of a communication
object is platform independent. When transmitting a communication object, it
is newly created within the receiving component. 

Communication objects provide various methods to access their content. These
methods can use every kind of data structures like STL containers etc. and are
not restricted to CORBA types. In particular the user of a communication object
has not at all to deal with CORBA types.


The user data types are transmitted via any types between the server and the
client part of a communication pattern. This allows to completely specify the
internal interface of the communication patterns without knowing what kind of
user data is transmitted. This in particular supports the chosen template based
implementation.

To allow the templates to extract the user data structure of a communication
object, every communication object has to provide a "get" and a "set" as can
be seen in the examples. These convert the user data structure into an any
type by using the <<= and the >>= operator. These operators are automatically
generated by the IDL compiler for the IDL described user data structures.


Currently no abstract communication object is specified which enforces the
implementation of the "set" and "get" method. This is not a big issue since
the compiler detects missing methods when trying to expand the communication
pattern templates.
