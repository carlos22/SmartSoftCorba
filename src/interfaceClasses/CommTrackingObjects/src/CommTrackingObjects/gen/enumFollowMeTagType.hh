//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain Version 0.10.3
// The SmartSoft Toolchain has been developed by:
//  
// ZAFH Servicerobotic Ulm
// Christian Schlegel (schlegel@hs-ulm.de)
// University of Applied Sciences
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// smart-robotics.sourceforge.net
// 
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#ifndef _COMMTRACKINGOBJECTS_ENUM_HH_FOLLOWMETAGTYPE
#define _COMMTRACKINGOBJECTS_ENUM_HH_FOLLOWMETAGTYPE

#include <CommTrackingObjects/gen/enumFollowMeTagTypeC.hh>
#include <string>
#include <ostream>

namespace CommTrackingObjects
{

class FollowMeTagType
{
public:
	enum literal
	{

		FOLLOW_RESET = CommTrackingObjectsIDL::LITERAL_FOLLOW_RESET,

		SET_MAX_COV = CommTrackingObjectsIDL::LITERAL_SET_MAX_COV
	};

	FollowMeTagType()
	{
	}

	FollowMeTagType(literal t)
	{
		value = t;
	}

	operator literal()
	{
		return value;
	}

	FollowMeTagType(CommTrackingObjectsIDL::ENUM_FollowMeTagType t)
	{
		value = (literal) t;
	}

	bool operator ==(FollowMeTagType& t)
	{
		return this->value == t.value;
	}

	CommTrackingObjectsIDL::ENUM_FollowMeTagType get_value_idl()
	{
		return (CommTrackingObjectsIDL::ENUM_FollowMeTagType) value;
	}

	literal get_value() const
	{
		return value;
	}

	std::string get_string() const
	{
		switch (value)
		{

		case FOLLOW_RESET:
			return "FollowMeTagType::FOLLOW_RESET";
			break;

		case SET_MAX_COV:
			return "FollowMeTagType::SET_MAX_COV";
			break;

		default:
			return "UNKNOWN!";
			break;
		}
	}

private:
	literal value;
};

inline std::ostream &operator<<(std::ostream &os, const FollowMeTagType &e)
{
	os << e.get_string();
	return os;
}

}
#endif
