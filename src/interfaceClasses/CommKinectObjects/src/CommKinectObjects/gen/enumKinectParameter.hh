//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain Version 0.8.0
// The SmartSoft Toolchain has been developed by:
//  
// ZAFH Servicerobotic Ulm
// Christian Schlegel (schlegel@hs-ulm.de)
// University of Applied Sciences
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// smart-robotics.sourceforge.net
// 
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#ifndef _COMMKINECTOBJECTS_ENUM_HH_KINECTPARAMETER
#define _COMMKINECTOBJECTS_ENUM_HH_KINECTPARAMETER

#include <CommKinectObjects/gen/enumKinectParameterC.hh>

namespace CommKinectObjects
{
/** alt:
 enum KinectParameter {
 
 TILT_ANGLE = CommKinectObjectsIDL::LITERAL_TILT_ANGLE
 };
 */

///////////////////////
class KinectParameter
{
public:
	enum literal
	{

		TILT_ANGLE = CommKinectObjectsIDL::LITERAL_TILT_ANGLE
	};

	KinectParameter(literal t)
	{
		value = t;
	}

	operator literal()
	{
		return value;
	}

	KinectParameter(CommKinectObjectsIDL::ENUM_KinectParameter t)
	{
		value = (literal) t;
	}

	//				operator CommKinectObjectsIDL::ENUM_KinectParameter() {
	//					return (CommKinectObjectsIDL::ENUM_KinectParameter) value;
	//				}

	bool operator ==(KinectParameter& t)
	{
		return this->value == t.value;
	}

	CommKinectObjectsIDL::ENUM_KinectParameter get_value_idl()
	{
		return (CommKinectObjectsIDL::ENUM_KinectParameter) value;
	}

	literal get_value()
	{
		return value;
	}

private:
	literal value;
};
///////////////////////

}
#endif
