//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain Version 0.10.4
// The SmartSoft Toolchain has been developed by:
//
// ZAFH Servicerobotic Ulm
// Christian Schlegel (schlegel@hs-ulm.de)
// University of Applied Sciences
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// smart-robotics.sourceforge.net
//
// This file is generated once. Modify this file to your needs.
// If you want the toolchain to re-generate this file, please
// delete it before running the code generator.
//--------------------------------------------------------------------------
//------------------------------------------------------------------------
//
//  Copyright (C) 2010 Manuel Wopfner
//
//        wopfner@hs-ulm.de
//
//        Christian Schlegel (schlegel@hs-ulm.de)
//        University of Applied Sciences
//        Prittwitzstr. 10
//        89075 Ulm (Germany)
//
//  This file is part of the "CommObjectRecognitonObjects".
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//--------------------------------------------------------------------------

#ifndef _COMM_COMMOBJECTRECOGNITIONOBJECTS_COMMSIMPLEOBJECTPARAMETER_HH
#define _COMM_COMMOBJECTRECOGNITIONOBJECTS_COMMSIMPLEOBJECTPARAMETER_HH

#include <string>

#ifndef LISP_SEPARATOR
#define LISP_SEPARATOR " ()\"\n"
#define LISP_STRING    1000
#endif

// include files of classes

// include header-files of included communication objects

// include enums


// include client-side file generated by IDL compiler
#include "CommObjectRecognitionObjects/gen/smartCommSimpleObjectParameterC.hh"

namespace CommObjectRecognitionObjects
{

class CommSimpleObjectParameter
{
protected:
	CommObjectRecognitionObjectsIDL::CommSimpleObjectParameter idl_CommSimpleObjectParameter;

public:
	CommSimpleObjectParameter()
	{
	}

	CommSimpleObjectParameter(const CommObjectRecognitionObjectsIDL::CommSimpleObjectParameter &obj) :
		idl_CommSimpleObjectParameter(obj)
	{
	}

	virtual ~CommSimpleObjectParameter()
	{
	}

	operator CommObjectRecognitionObjectsIDL::CommSimpleObjectParameter() const
	{
		return idl_CommSimpleObjectParameter;
	}

	void get(CORBA::Any &a) const;
	void set(const CORBA::Any &a);

	static inline std::string identifier(void)
	{
		return "CommObjectRecognitionObjects::CommSimpleObjectParameter";
	}

	//
	// user interfaces

	/**
	 * Set the values of the communication object in lisp syntax.
	 * Syntax:
	 * 		?objectName
	 */
	int set(const std::string& str)
	{
		char *param = (char *) NULL;
		char *input = (char *) NULL;

		int error = 0;
		input = (char *) str.c_str();

		do
		{
			param = strsep(&input, LISP_SEPARATOR);
		} while ((param != NULL) && (strlen(param) == 0));

		idl_CommSimpleObjectParameter.type = param;
		return error;
	}

	std::string get_type() const
	{
		return std::string(idl_CommSimpleObjectParameter.type);
	}
};

}
#endif
