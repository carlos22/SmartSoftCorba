// --------------------------------------------------------------------------
//
//  Copyright (C) 2010 Boris Kluge, Manuel Wopfner
//
//        schlegel@hs-ulm.de
//
//        Prof. Dr. Christian Schlegel
//        University of Applied Sciences
//        Prittwitzstr. 10
//        D-89075 Ulm
//        Germany
//
//  This file is part of the "SmartSoft Basic Communication Classes".
//  It provides basic standardized data types for communication between
//  different components in the mobile robotics context. These classes
//  are designed to be used in conjunction with the SmartSoft Communication
//  Library.
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
//  (partly based on work by Christian Schlegel and Pablo d'Angelo)
//
// --------------------------------------------------------------------------

#ifndef _SMART_IDL_MOBILELASERSCAN
#define _SMART_IDL_MOBILELASERSCAN

#include "smartPose3d.idl"
#include "smartBaseState.idl"
#include "smartLaserScan6DPose.idl"

module SmartIDL 
{
  // A horizontal laser scan, as used on mobile robots 
  // for self localisation, obstacle avoidance, object tracking etc.
  struct MobileLaserScan
  {
    BaseState         base_state;      // the most recent basestate
    LaserScan6DPose   laser_scan_pose; // the laserscan with pose on robot

    // position of the scanner in world coordinates.
    // the scanner's coordinate frame is:
    //   x - in the scanning plane, direction of scan ray no. 180
    //   y - in the scanning plane, direction of scan ray no. 360
    //   (assuming 361 scan points for a 180 degree range and first ray having index 0)
    //   z - the axis of the scanner, upwards
    Pose3d laser_world_pose; 
  };
};

#endif

