//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain Version 0.10.0
// The SmartSoft Toolchain has been developed by:
//
// ZAFH Servicerobotic Ulm
// Christian Schlegel (schlegel@hs-ulm.de)
// University of Applied Sciences
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// smart-robotics.sourceforge.net
//
// This file is generated once. Modify this file to your needs.
// If you want the toolchain to re-generate this file, please
// delete it before running the code generator.
//--------------------------------------------------------------------------


// --------------------------------------------------------------------------
//
//  Copyright (C) 2003 Boris Kluge, 2011 Dennis Stampfer
//
//        schlegel@hs-ulm.de
//
//        Prof. Dr. Christian Schlegel
//        University of Applied Sciences
//        Prittwitzstr. 10
//        D-89075 Ulm
//        Germany
//
//  This program is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this program; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
//
// --------------------------------------------------------------------------

#include "ConsoleTask.hh"
#include "gen/SmartTTSClient.hh"

#include <list>
#include <iostream>
#include <sstream>

ConsoleTask::ConsoleTask()
{
	std::cout << "constructor ConsoleTask\n";
}

int ConsoleTask::svc()
{
	CHS::StatusCode status;
	bool viaQuery = false; // send speech via query?
    char ch;
    std::ostringstream oss;

	std::cout << "Use speech send or query [s/q]?" << std::endl;
    while(true)
    {
      std::cin.get(ch);
      if(ch=='\n') break;
      oss.put(ch);
    }
    const std::string txt = oss.str();
    if(txt == "s") {
    	std::cout << "Using send." << std::endl;
    	viaQuery = false;
    } else {
    	std::cout << "Using query." << std::endl;
    	viaQuery = true;
    }




    while(true) {
	  std::cout << "Enter your text ('quit' to exit): " << std::endl;

      while(true)
      {
        std::cin.get(ch);
        if(ch=='\n') break;
        oss.put(ch);
      }
      const std::string txt = oss.str();

      if(txt=="quit")
    	  break;

      CommSpeechObjects::CommSpeechOutputMessage msg(txt);
      msg.print();

      if(viaQuery) {
    	  CommBasicObjects::CommPropertySet answer;
    	  status = COMP->queryClient->query(msg, answer);
      } else {
    	  status = COMP->sendClient->send(msg);
      }


      if(status != CHS::SMART_OK) {
    	  std::cout << "Error sending speech: " << CHS::StatusCodeConversion(status) << std::endl;
      }
    }
    return 0;
}
