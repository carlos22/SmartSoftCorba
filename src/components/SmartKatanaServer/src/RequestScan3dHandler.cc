//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain Version 0.6.0
// The SmartSoft Toolchain has been developed by:
//
// ZAFH Servicerobotic Ulm
// Christian Schlegel (schlegel@hs-ulm.de)
// University of Applied Sciences
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// smart-robotics.sourceforge.net
//
// This file is generated once. Modify this file to your needs.
// If you want the toolchain to re-generate this file, please
// delete it before running the code generator.
//--------------------------------------------------------------------------

#include "RequestScan3dHandler.hh"
#include "gen/SmartKatanaServer.hh"

#include "Katana.hh"

#include <iostream>

void RequestScan3dHandler::handleSend(
		const Smart::CommManipulatorRequestScan3d &r) throw()
{
	Smart::ScanEventState answer;
	answer.set_valid(false);

	if (COMP->stateServer->tryAcquire("scan") == CHS::SMART_OK) {
		// release scan state so a state change can happen
		COMP->stateServer->release("scan");
		KATANA->performLaserScan(r, answer);
	} else {
		std::cout << ">> component not in scan state!\n";
	}

	COMP->scan3dEventServer->put(answer);

}
