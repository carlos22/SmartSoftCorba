/*!
\page smartSpeechOutputServer SpeechOutputServer Text-to-speech Adapter

  This component acts as an adapter to text-to-speech conversion programs.
  Each time text is to be spoken, an external executable is started which 
  receives the text via its standard input.
  The path to the executable is configurable from the ini file.
  
  The service of this component is provided by means of two servants:
  
  - The \c SendServer<Smart::CommSpeechOutputMessage> can be used for speech output
    without feedback to the client component.
  - The \c QueryServer<Smart::CommSpeechOutputMessage,Smart::CommPropertySet> shall be
    used if the client component wants to be informed about the status of the output
    process, or if it needs to wait until the output is actually done.
    
  The query servant returns an instance of Smart::CommPropertySet, which includes the
  following fields:
  
  - The value of the \c "success" field is set to true if everything went fine.
  - If the value of \c "success" field is \c false, the value of the \c "discarded" 
    field may be \c true, indicating that the timeout for that specific message has 
    been exceeded.
  - If both the values of the \c "success" field and the \c "discarded" field are 
    \c false, a third field named \c "error" will contain a string with a description
    of the problems (for example, the text2speech executable could not be found etc.).

  Various executables can be used in conjunction with this component.
  The most primitve way would be to use \c /bin/cat, which simply echoes the text
  that is to be spoken to stdout.
  A free speech synthesizer is provided by the 
  <a href="http://tcts.fpms.ac.be/synthesis/mbrola.html">mbrola project</a>.
  Here you can find a description on how to set up mbrola for the german 
  language: \ref smartSpeechOutputServer_mbrola

  \section smartSpeechOutputServer_client Example Client
  
  After starting the \c smartSpeechOutputExampleClient executable, you are able to input
  text via the keyboard which is sent to the \c smartSpeechOutputServer for processing.
  Type the text \c "quit" to exit the client.

  \sa Smart::CommSpeechOutputMessage 
  \sa Smart::CommPropertySet
*/

