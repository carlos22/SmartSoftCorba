/*!
\page smartSpeechOutputServer_mbrola German Text to Speech with mbrola

Note: this text is taken from 
<a href="http://bogmog.sourceforge.net/">the Debian Home Network Documentation Project</a>,
where it is provided under the 
<a href="http://www.opencontent.org/openpub/">Open Publication License</a>.
For the "say" script mentioned in the text, see subdirectory "misc" in the component's directory.


\section smartSpeechOutputServer_mbrola_install Installation

Get the mbrola binaries and voicefiles from 
<a href="http://tcts.fpms.ac.be/synthesis/mbrola/mbrcopybin.html">http://tcts.fpms.ac.be/synthesis/mbrola/mbrcopybin.html</a>
and unzip the mbrola ZIP file. Then make a directory where the binaries 
and needed datafiles will be installed to.
\code
mkdir /usr/local/mbrola
\endcode
Now copy the \c mbrola-linux-i386 file from the \c mbr301h.zip to \c /usr/local/mbrola/mbrola.
Unzip your voices to \c /usr/local/mbrola:
\code
unzip de2-990106.zip -d /usr/local/mbrola/
unzip de3-000307.zip -d /usr/local/mbrola/
\endcode
If you want you can test the speech synthesis already with one of the 
voices by creating a wav file in \c /tmp:
\code
/usr/local/mbrola /usr/local/de3/de3 /usr/local/de3/TEST/demo.pho /tmp/demo.wav
\endcode
As you've seen you must provide a .pho file that is then read by mbrola. 
To create such a file from text we need \c txt2pho from 
<a href="http://www.ikp.uni-bonn.de/dt/forsch/phonetik/hadifix/HADIFIXforMBROLA.html">http://www.ikp.uni-bonn.de/dt/forsch/phonetik/hadifix/HADIFIXforMBROLA.html</a>.
Get it and unzip it:
\code
unzip txt2pho.zip
\endcode
This will create a new directory and a hidden file called \c .txt2phorc.
Move this file to \c /etc/txt2pho:
\code
mv .txt2phorc /etc/txt2pho
\endcode
and edit it. Change the variables \c DATAPATH and \c INVPATH to 
\c /usr/local/mbrola/data/ in \c /etc/txt2pho.
Now change to the \c txt2pho directory and copy some files to \c /usr/local/mbrola
\code
cd txt2pho
cp -r data /usr/local/mbrola/
cp txt2pho /usr/local/mbrola/
\endcode
Another needed tool named \c pipefilt comes as binary and as source. The binary 
is linked to an old library so compile your own and copy it to \c /usr/local/mbrola/.
\code
g++ pipefilt.cc -o pipefilt
cp pipefilt /usr/local/mbrola/
\endcode
The third tool is called \c preproc.zip. Again unzip it and go to the new directory:
\code
unzip preproc.zip
cd preproc
\endcode
Create a new dir called obj and run make:
\code
mkdir obj
make
\endcode
Copy the executable and the needed files to \c /usr/local/mbrola
\cope
cp preproc /usr/local/mbrola/
cp Rules.lst /usr/local/mbrola/
cp Hadifix.abk /usr/local/mbrola/
\endcode
Fine! What we need at last is a tool that is capable to play soundfiles. \c sox 
is a good choice. It comes with a tool called \c 'play' which is exactly what we 
need so install it:
\code
apt-get install sox
\endcode
Nearly finished! Simply copy the attached \c 'say' script to \c /usr/local/mbrola/, 
make it executable and link it to \c /usr/local/bin:
\code
chmod 755 /usr/local/mbrola/say
ln -s /usr/local/mbrola/say /usr/local/bin/
\endcode
Now try:
\code
echo "Hallo! Ich bin deine neue Sparachausgabe" | say
\endcode

\section smartSpeechOutputServer_mbrola_troubleshooting Troubleshooting

You need an \c /etc/txt2pho with the right paths in it, even if you use the \c -p 
switch of \c txt2pho. It will not work otherwise and you'll get an error like
\code
h-a Concat : PANIC, check your pitch :-)
\endcode
*/
