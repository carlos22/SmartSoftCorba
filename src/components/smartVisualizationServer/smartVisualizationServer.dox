/*!
\page smartVisualizationServer 2D Visualization Server

  This component provides a common 2d drawing area for multiple visualization clients.
  This service is provided by means of two send servants:
  
  - A \c SendServer<Smart::CommStringMap> is used for registration and unregistration
    of clients. The service name is \c "registration" and will not be changed.
  - A \c SendServer<Faw::TransmittablePainter> is used for updating a client's drawing.
    The service name is \c "drawing" and will not be changed.
  
  \subsection sec_visualization_server_registering Registration
  
  A client has to register itself with the server before it is allowed to send
  drawing data, and (more important) has to unregister itself as soon as no more 
  drawings of that client shall be presented to the viewer.
  
  Registration/unregistration is accomplished by sending a Smart::CommStringMap instance
  to the \c "registration" service of the visualization server.
  The communicated string map is expected to contain two fields. 
  A field with key \c "name" is expected to provide a name for the client.
  A field with key \c "cmd" is expected to contain one of the two values
  \c "add" (for registration) and \c "remove" (for unregistration).

  \subsection sec_visualization_server_drawing Drawing
  
  Clients may update their graphical representation by sending a Faw::TransmittablePainter
  instance to the \c "drawing" service of the visualization server.
  A transmittable painter inherits Faw::DrawingStoreReplayPainter and therefore a label can
  be attached to it. The visualization server expects that label to correspond to the client
  name.

  \subsection sec_visualization_server_options Command Line Options
  
  The initial appearance of the server is adjustable by several command line arguments.
  
  - Set the inital size (in pixels) of the drawing window area with
    \code
      smartVisualizationServer [-w=<width>] [-h=<height>]
    \endcode
  - Set the visible part of the model (in units of meters) with
    \code
      smartVisualizationServer [-min_x=<left>] [-max_x=<right>] [-min_y=<bottom>] [-max_y=<top>]
    \endcode
  - Set the maximum frame rate by giving a minimum update interval (in msec) with
    \code
      smartVisualizationServer [-interval=<msec>]
    \endcode
    This option may be even necessary if you are using many clients.
*/
