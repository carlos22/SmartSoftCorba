//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain Version 0.10.2
// The SmartSoft Toolchain has been developed by:
//  
// ZAFH Servicerobotic Ulm
// Christian Schlegel (schlegel@hs-ulm.de)
// University of Applied Sciences
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// smart-robotics.sourceforge.net
// 
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#ifndef _EVENTSERVERHANDLERCORE_HH
#define _EVENTSERVERHANDLERCORE_HH

#include "smartSoft.hh"

// include communication objects
#include <CommManipulationPlannerObjects/commManipulationPlannerEventParameter.hh>

#include <CommManipulationPlannerObjects/commManipulationPlannerEventResult.hh>

#include <CommManipulationPlannerObjects/commManipulationPlannerEventState.hh>

#include <CommManipulationPlannerObjects/commManipulationPlannerParameter.hh>

#include <CommManipulationPlannerObjects/commManipulationTaskPlanning.hh>

#include <CommManipulatorObjects/commManipulatorEventParameter.hh>

#include <CommManipulatorObjects/commManipulatorEventResult.hh>

#include <CommManipulatorObjects/commManipulatorTrajectory.hh>

#include <CommManipulatorObjects/commMobileManipulatorState.hh>

#include <CommObjectRecognitionObjects/commObjectRecognitionEnvironment.hh>

#include <CommObjectRecognitionObjects/commObjectRecognitionId.hh>

#include <CommObjectRecognitionObjects/commObjectRecognitionObjectProperties.hh>

class EventServerHandlerCore: public CHS::EventTestHandler<
		CommManipulationPlannerObjects::CommManipulationPlannerEventParameter,
		CommManipulationPlannerObjects::CommManipulationPlannerEventResult,
		CommManipulationPlannerObjects::CommManipulationPlannerEventState>
{
public:
	bool testEvent(
			CommManipulationPlannerObjects::CommManipulationPlannerEventParameter &p,
			CommManipulationPlannerObjects::CommManipulationPlannerEventResult &r,
			const CommManipulationPlannerObjects::CommManipulationPlannerEventState &s) throw()
	{
		return false;
	}
	;
};
#endif
