[smartsoft]
#--------------------------------------------------------------------------
# Code generated by the SmartSoft MDSD Toolchain Version 0.10.2
# The SmartSoft Toolchain has been developed by:
#  
# ZAFH Servicerobotic Ulm
# Christian Schlegel (schlegel@hs-ulm.de)
# University of Applied Sciences
# Prittwitzstr. 10
# 89075 Ulm (Germany)
#
# Information about the SmartSoft MDSD Toolchain is available at:
# smart-robotics.sourceforge.net
# 
# Please do not modify this file. It will be re-generated
# running the code generator.
#--------------------------------------------------------------------------

##########################
# component parameters

[component]

# the name of the component for the naming service
name SmartPTUServer

##########################
# server port parameter

[devicePoseStateServer]
serviceName devicePoseState

[moveQueryServer]
serviceName movePTU

[paramServer]
serviceName param

[stateServer]
serviceName state

##########################
# client port parameter

[baseStateClient]
serviceName basestate
serverName SmartPioneerBaseServer
interval 100

[baseStateQueryClient]
serviceName basestatequery
serverName SmartPioneerBaseServer

##########################
# other parameter

[PTU]

# The azimuth angle of the ptu on the robot. [rad] Default = 0
azimuth 0

# The device which represents the ptu. Default = /dev/ttyS0
device /dev/ttyS0

# The elevation angle of the ptu on the robot. [rad] Default = 0
elevation 0

# The roll angle of the ptu on the robot. [rad] Default = 0
roll 0

verbose false

# The x position of the ptu on the robot. [mm] Default = 0
x 0

# The y position of the ptu on the robot. [mm] Default = 0
y 0

# The z position of the ptu on the robot. [mm] Default = 0
z 0

[base]

# If on_base = false this represents the base angle of the robot. [mm] Default = 0
base_a 0

# Flag which indicates if the ptu is on a robot. Default = true
on_base true

# If on_base = false this represents the steering angle of the robot. [mm] Default = 0
steer_a 0

# If on_base = false this represents the turret angle of the robot. [mm] Default = 0
turret_a 0

# If on_base = false this represents the x position of the robot. [mm] Default = 0
x 0

# If on_base = false this represents the y position of the robot. [mm] Default = 0
y 0

# If on_base = false this represents the z position of the robot. [mm] Default = 0
z 0

[hardware]

# Acceleration of the pan axis. [rad per sec^2] Default = 1.795
acceleration_pan 1.795

# Acceleration of the tilt axis. [rad per sec^2] Default = 1.795
acceleration_tilt 1.795

# Max speed the pan axis can move. [rad per sec] Default = 2.604
max_speed_pan 2.604

# Max speed the tilt axis can move. [rad per sec] Default = 2.604
max_speed_tilt 2.604

# Min speed the pan axis can move. [rad per sec] Default = 0.028
min_speed_pan 0.028

# Min speed the tilt axis can move. [rad per sec] Default = 0.028
min_speed_tilt 0.028

# Speed the pan axis should move. [rad per sec] Default = 1.0
speed_pan 1.0

# Speed the tilt axis should move. [rad per sec] Default = 1.0
speed_tilt 1.0

# Start up speed of the pan axis. [rad per sec] Default = 0.2
start_up_speed_pan 0.2

# Start up speed of the tilt axis. [rad per sec] Default = 0.2
start_up_speed_tilt 0.2

