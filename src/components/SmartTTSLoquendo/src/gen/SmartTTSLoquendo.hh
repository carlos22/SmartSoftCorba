//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain Version 0.10.2
// The SmartSoft Toolchain has been developed by:
//  
// ZAFH Servicerobotic Ulm
// Christian Schlegel (schlegel@hs-ulm.de)
// University of Applied Sciences
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// smart-robotics.sourceforge.net
// 
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#ifndef _SMARTTTSLOQUENDO_HH
#define _SMARTTTSLOQUENDO_HH

#include <iostream>
#include "smartSoft.hh"
#include "../SmartTTSLoquendoCore.hh"
// include communication objects
#include <CommBasicObjects/commPropertySet.hh>

#include <CommSpeechObjects/commSpeechOutputMessage.hh>

// include tasks	

#include "../SpeechOutputTask.hh"
// include handler
#include "../CompHandler.hh"
#include "../QueryHandler.hh"
#include "../SendHandler.hh"

#define COMP SmartTTSLoquendo::instance()

class SmartTTSLoquendo: public SmartTTSLoquendoCore
{
private:
	static SmartTTSLoquendo _smartTTSLoquendo;

	// constructor
	SmartTTSLoquendo();

	// copy-constructor
	SmartTTSLoquendo(const SmartTTSLoquendo& cc);

	// destructor
	~SmartTTSLoquendo()
	{
	}
	;

	// load parameter from ini file
	void loadParameter(int argc, char *argv[]);

	// instantiate handler
	CompHandler compHandler;
	QueryHandler queryHandler;
	SendHandler sendHandler;

	// ThreadQueueHandler 


public:
	// component
	CHS::SmartComponent *component;

	// create mutex


	// create condition mutex


	// instantiate tasks

	SpeechOutputTask speechOutputTask;

	// ports
	CHS::QueryServer<CommSpeechObjects::CommSpeechOutputMessage,
			CommBasicObjects::CommPropertySet> *speechQueryServer;
	CHS::SendServer<CommSpeechObjects::CommSpeechOutputMessage>
			*speechSendServer;

	void init(int argc, char *argv[]);
	void run();

	// return singleton instance
	static SmartTTSLoquendo* instance()
	{
		return (SmartTTSLoquendo*) &_smartTTSLoquendo;
	}

	// ini parameter
	struct ini_ini
	{

		// component struct
		struct ini_component
		{
			// the name of the component
			std::string name;
		} component;

		struct ini_speechQueryServer
		{
			std::string serviceName;
		} speechQueryServer;

		struct ini_speechSendServer
		{
			std::string serviceName;
		} speechSendServer;

		struct ini_speech
		{

			std::string voice;
		} speech;
	} ini;

};
#endif
